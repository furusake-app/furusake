name: Deploy Next.js to Vercel

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "web/**"
      - "api/**" # API Client が変更されうるため、API ディレクトリも含める
      - "packages/**"
      - ".github/workflows/vercel-deploy.yaml"
  workflow_run:
    workflows:
      - "Terraform Apply"
    types:
      - completed

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      vercel-args: ${{ steps.set-env.outputs.vercel-args }}
      branch: ${{ steps.set-env.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set environment variables
        id: set-env
        run: |
          branch_ref="${{ github.ref }}"
          head_branch="${{ github.event.workflow_run.head_branch || '' }}"

          if [[ "$branch_ref" == "refs/heads/main" ]] || [[ "$head_branch" == "main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
            echo "vercel-args=--prod" >> $GITHUB_OUTPUT
            echo "branch=main" >> $GITHUB_OUTPUT
          else
            echo "environment=preview" >> $GITHUB_OUTPUT
            echo "vercel-args=" >> $GITHUB_OUTPUT
            echo "branch=develop" >> $GITHUB_OUTPUT
          fi
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: api/go.mod
          cache: true
      - name: Generate OpenAPI Spec
        working-directory: api
        run: go run cmd/openapi/main.go
      - name: Generate TypeScript API Client
        run: pnpm -F furusake-api gen
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-client-artifacts
          path: packages/api-client/src
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}
      environment: ${{ needs.setup.outputs.environment }}
    environment:
      name: ${{ needs.setup.outputs.environment }}
      url: ${{ steps.deploy.outputs.deployment-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: api-client-artifacts
          path: packages/api-client/src
      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ needs.setup.outputs.environment }} --token=${{ secrets.VERCEL_API_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build ${{ needs.setup.outputs.vercel-args }} --token=${{ secrets.VERCEL_API_TOKEN }}
      - name: Deploy to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(vercel deploy --prebuilt ${{ needs.setup.outputs.vercel-args }} --token=${{ secrets.VERCEL_API_TOKEN }} | tail -n1)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

  notify:
    runs-on: ubuntu-latest
    needs: [setup, deploy]
    if: always()
    steps:
      - name: Comment on commit (Success)
        if: needs.deploy.result == 'success'
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            🚀 **${{ needs.deploy.outputs.environment == 'production' && 'Production' || 'Preview' }} Deployment Successful**

            ✅ Deployed to: ${{ needs.deploy.outputs.deployment-url }}
            📦 Environment: `${{ needs.deploy.outputs.environment }}`
            🔄 Workflow: [Run #${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            _Deployed from commit: `${{ github.sha }}`_
          reactions: rocket

      - name: Comment on commit (Failure)
        if: needs.deploy.result == 'failure' || needs.setup.result == 'failure'
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            ❌ **Deployment Failed**

            🔍 Please check the [workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
            📦 Target environment: `${{ needs.setup.outputs.environment || 'unknown' }}`

            **Failed job:** ${{ needs.setup.result == 'failure' && 'Setup' || 'Deploy' }}

            _Failed at commit: `${{ github.sha }}`_
          reactions: confused
